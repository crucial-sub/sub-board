/// Prisma 클라이언트를 생성하는 설정 블록
generator client {
  provider = "prisma-client-js"
}

/// PostgreSQL 데이터베이스 연결 정보를 정의한다
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 애플리케이션의 기본 사용자 모델 정의
model User {
  id           String   @id @default(cuid())
  loginId      String   @unique
  nickname     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // 액세스/리프레시 토큰 관리를 위한 세션 목록
  sessions     Session[]
  posts        Post[]
  comments     Comment[]
}

/// 리프레시 토큰을 저장해 인증 세션을 추적하는 모델
model Session {
  id           String   @id @default(cuid())
  userId       String
  refreshToken String   @unique
  userAgent    String?
  ipAddress    String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// 게시글 정보를 저장하는 모델
model Post {
  id          String    @id @default(cuid())
  authorId    String
  title       String
  content     String
  viewCount   Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  author User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments Comment[]
}

/// 게시글에 달린 댓글을 저장하는 모델
model Comment {
  id        String   @id @default(cuid())
  postId    String
  authorId  String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
}
